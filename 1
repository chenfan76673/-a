class LNode:
    def __new__(self,x):
        self.data = x
        self.next = None

    #方法功能：对单链表进行逆序 输入参数：head：链表头结点
def Reverse(head):
    #判断链表是否为空
    if head == None or head.next ==None:
        return
    pre = None
    cur = None
    next = None
    #把链表首节点变为尾节点
    cur = head.next
    next = cur.next
    cur.next = None
    pre = cur
    cur = next
    #使当前遍历到的结点cur指向其前驱结点
    while cur.next != None:
        next = cur.next
        cur.next = pre
        pre = cur
        cur = cur.next
        cur = next
    #链表最后一个结点指向倒数第二个结点
    cur.next = pre
    #链表的头结点指向原来链表的尾结点
    head.next = cur

if __name__  == "__main__":
    i = 1
    #链表头结点
    head = LNode('head')
    head.next = None
    tmp = None
    cur = head
    #构造单链表
    while i < 8:
        tmp = LNode()
        tmp.data = i
        tmp.next = None
        cur.next = tmp
        cur = tmp
        i += 1
    print('逆序前：',cur = head.next)
    while cur != None:
        print(cur.data,cur = cur.data)
    print("\n逆序后：")
    Reverse(head)
    cur = head.next
    while cur != None:
        print(cur.data)
        cur = cur.next
